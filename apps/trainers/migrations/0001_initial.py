# Generated by Django 4.2.23 on 2025-07-26 03:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='이름')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="전화번호는 '+999999999' 형식으로 입력해주세요.", regex='^\\+?1?\\d{9,15}$')], verbose_name='전화번호')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='이메일')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='생년월일')),
                ('gender', models.CharField(blank=True, choices=[('M', '남성'), ('F', '여성')], max_length=1, null=True, verbose_name='성별')),
                ('address', models.TextField(blank=True, verbose_name='주소')),
                ('emergency_contact', models.CharField(blank=True, max_length=20, verbose_name='비상연락처')),
                ('employment_status', models.CharField(choices=[('active', '재직'), ('inactive', '휴직'), ('resigned', '퇴사')], default='active', max_length=20, verbose_name='재직 상태')),
                ('hire_date', models.DateField(verbose_name='입사일')),
                ('base_salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='기본급')),
                ('kakao_id', models.CharField(blank=True, max_length=100, verbose_name='카카오톡 ID')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='trainers/profiles/', verbose_name='프로필 이미지')),
                ('specialties', models.TextField(blank=True, verbose_name='전문 분야')),
                ('certifications', models.TextField(blank=True, verbose_name='자격증')),
                ('experience_years', models.PositiveIntegerField(default=0, verbose_name='경력 연차')),
                ('notes', models.TextField(blank=True, verbose_name='메모')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='branches.branch', verbose_name='소속 지점')),
            ],
            options={
                'verbose_name': '트레이너',
                'verbose_name_plural': '트레이너들',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TrainerIncentive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incentive_type', models.CharField(choices=[('fixed', '고정 금액'), ('percentage', '퍼센티지')], default='fixed', max_length=20, verbose_name='인센티브 유형')),
                ('fixed_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='고정 금액')),
                ('percentage_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='퍼센티지 비율 (%)')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('trainer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='trainers.trainer', verbose_name='트레이너')),
            ],
            options={
                'verbose_name': '트레이너 인센티브',
                'verbose_name_plural': '트레이너 인센티브들',
            },
        ),
        migrations.CreateModel(
            name='TrainerBlockedTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='날짜')),
                ('start_time', models.TimeField(verbose_name='시작 시간')),
                ('end_time', models.TimeField(verbose_name='종료 시간')),
                ('reason', models.CharField(blank=True, max_length=200, verbose_name='차단 사유')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainers.trainer', verbose_name='트레이너')),
            ],
            options={
                'verbose_name': '트레이너 차단 시간',
                'verbose_name_plural': '트레이너 차단 시간들',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='TrainerSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, '월요일'), (1, '화요일'), (2, '수요일'), (3, '목요일'), (4, '금요일'), (5, '토요일'), (6, '일요일')], verbose_name='요일')),
                ('start_time', models.TimeField(verbose_name='시작 시간')),
                ('end_time', models.TimeField(verbose_name='종료 시간')),
                ('is_available', models.BooleanField(default=True, verbose_name='근무 가능')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainers.trainer', verbose_name='트레이너')),
            ],
            options={
                'verbose_name': '트레이너 일정',
                'verbose_name_plural': '트레이너 일정들',
                'ordering': ['trainer', 'day_of_week'],
                'unique_together': {('trainer', 'day_of_week')},
            },
        ),
    ]
